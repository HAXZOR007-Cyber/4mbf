# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Aug  5 20:07:47 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))